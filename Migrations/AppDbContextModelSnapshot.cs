// <auto-generated />
using System;
using CameroonTradeInformationPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CameroonTradeInformationPortal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasColumnType("longtext");

                    b.Property<string>("Chapeau")
                        .HasColumnType("longtext");

                    b.Property<string>("Contenu")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Etat")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Categorie_Article", b =>
                {
                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("CategorieId", "ArticleId");

                    b.HasIndex("ArticleId");

                    b.ToTable("Categorie_Articles");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Compte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Comptes");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Entreprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fax")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Langue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Langues");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Loi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Fichier")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Lois");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Marchandise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Marchandises");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Mesure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Fichier")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<int>("LoiId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.HasIndex("LoiId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Mesures");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Mesure_Marchandise", b =>
                {
                    b.Property<int>("MesureId")
                        .HasColumnType("int");

                    b.Property<int>("MarchandiseId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MesureId", "MarchandiseId");

                    b.HasIndex("MarchandiseId");

                    b.ToTable("Mesure_Marchandises");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Mesure_Produit", b =>
                {
                    b.Property<int>("MesureId")
                        .HasColumnType("int");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MesureId", "ProduitId");

                    b.ToTable("mesure_Produits");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Norme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_Publication")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Fichier")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Normes");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fax")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.HasIndex("OrganisationId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("EntrepriseId")
                        .HasColumnType("int");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<int>("NormeId")
                        .HasColumnType("int");

                    b.Property<int>("TarifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrepriseId");

                    b.HasIndex("LangueId");

                    b.HasIndex("NormeId");

                    b.HasIndex("TarifId");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Produit_Region", b =>
                {
                    b.Property<int>("ProduitId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ProduitId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("Produits_Regions");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Regimes");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regime_Procedure", b =>
                {
                    b.Property<int>("RegimeId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.HasKey("RegimeId", "ProcedureId");

                    b.HasIndex("LangueId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Regime_Procedures");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Fichier")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<int>("LoiId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.HasIndex("LoiId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Regles");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regle_Marchandise", b =>
                {
                    b.Property<int>("RegleId")
                        .HasColumnType("int");

                    b.Property<int>("MarchandiseId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("RegleId", "MarchandiseId");

                    b.HasIndex("MarchandiseId");

                    b.ToTable("Regles_Marchandises");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Role_Compte", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("RoleId", "CompteId");

                    b.HasIndex("CompteId");

                    b.ToTable("Roles_Comptes");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Tarif_Douanier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code_SH")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date_Debut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date_Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<int>("MarchandiseId")
                        .HasColumnType("int");

                    b.Property<double>("Taux")
                        .HasColumnType("double");

                    b.Property<string>("Unite")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.HasIndex("MarchandiseId");

                    b.ToTable("Tarif_Douaniers");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.HasIndex("RegionId");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Article", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Categorie", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Categorie_Article", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Article", "Article")
                        .WithMany("Categories_Articles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Categorie", "Categorie")
                        .WithMany("Categories_Articles")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Entreprise", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Loi", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Marchandise", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Mesure", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Loi", "Loi")
                        .WithMany("Mesures")
                        .HasForeignKey("LoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Procedure", "Procedure")
                        .WithMany("Mesures")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");

                    b.Navigation("Loi");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Mesure_Marchandise", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Marchandise", "Marchandise")
                        .WithMany("Mesures_Marchandises")
                        .HasForeignKey("MarchandiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Mesure", "Mesure")
                        .WithMany("Mesures_Marchandises")
                        .HasForeignKey("MesureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marchandise");

                    b.Navigation("Mesure");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Mesure_Produit", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Mesure", "Mesure")
                        .WithMany("Mesures_Produits")
                        .HasForeignKey("MesureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Produit", "Produit")
                        .WithMany("Mesures_Produits")
                        .HasForeignKey("MesureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mesure");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Norme", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Organisation", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Procedure", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Organisation", "Organisation")
                        .WithMany("Procedures")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Produit", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Entreprise", null)
                        .WithMany("produits")
                        .HasForeignKey("EntrepriseId");

                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Norme", "Norme")
                        .WithMany("Produits")
                        .HasForeignKey("NormeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Tarif_Douanier", "Tarif")
                        .WithMany("Produits")
                        .HasForeignKey("TarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");

                    b.Navigation("Norme");

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Produit_Region", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Produit", "Produit")
                        .WithMany("Produits_Regions")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Region", "Region")
                        .WithMany("Produits_Regions")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regime", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regime_Procedure", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Procedure", "Procedure")
                        .WithMany("Regimes_Procedures")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Regime", "Regime")
                        .WithMany("Regimes_Procedures")
                        .HasForeignKey("RegimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");

                    b.Navigation("Procedure");

                    b.Navigation("Regime");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Region", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regle", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Loi", "Loi")
                        .WithMany("Regles")
                        .HasForeignKey("LoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Procedure", null)
                        .WithMany("Regles")
                        .HasForeignKey("ProcedureId");

                    b.Navigation("Langue");

                    b.Navigation("Loi");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regle_Marchandise", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Marchandise", "Marchandise")
                        .WithMany("Regles_Marchandises")
                        .HasForeignKey("MarchandiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Regle", "Regle")
                        .WithMany("Regles_Marchandises")
                        .HasForeignKey("RegleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marchandise");

                    b.Navigation("Regle");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Role_Compte", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Compte", "Compte")
                        .WithMany("Roles_Comptes")
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Role", "Role")
                        .WithMany("Roles_Comptes")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compte");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Tarif_Douanier", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Marchandise", "Marchandise")
                        .WithMany()
                        .HasForeignKey("MarchandiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");

                    b.Navigation("Marchandise");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Ville", b =>
                {
                    b.HasOne("CameroonTradeInformationPortal.Models.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CameroonTradeInformationPortal.Models.Region", "Region")
                        .WithMany("Villes")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Article", b =>
                {
                    b.Navigation("Categories_Articles");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Categorie", b =>
                {
                    b.Navigation("Categories_Articles");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Compte", b =>
                {
                    b.Navigation("Roles_Comptes");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Entreprise", b =>
                {
                    b.Navigation("produits");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Loi", b =>
                {
                    b.Navigation("Mesures");

                    b.Navigation("Regles");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Marchandise", b =>
                {
                    b.Navigation("Mesures_Marchandises");

                    b.Navigation("Regles_Marchandises");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Mesure", b =>
                {
                    b.Navigation("Mesures_Marchandises");

                    b.Navigation("Mesures_Produits");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Norme", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Organisation", b =>
                {
                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Procedure", b =>
                {
                    b.Navigation("Mesures");

                    b.Navigation("Regimes_Procedures");

                    b.Navigation("Regles");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Produit", b =>
                {
                    b.Navigation("Mesures_Produits");

                    b.Navigation("Produits_Regions");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regime", b =>
                {
                    b.Navigation("Regimes_Procedures");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Region", b =>
                {
                    b.Navigation("Produits_Regions");

                    b.Navigation("Villes");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Regle", b =>
                {
                    b.Navigation("Regles_Marchandises");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Role", b =>
                {
                    b.Navigation("Roles_Comptes");
                });

            modelBuilder.Entity("CameroonTradeInformationPortal.Models.Tarif_Douanier", b =>
                {
                    b.Navigation("Produits");
                });
#pragma warning restore 612, 618
        }
    }
}
